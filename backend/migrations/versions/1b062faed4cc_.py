"""empty message

Revision ID: 1b062faed4cc
Revises: 
Create Date: 2025-09-30 10:59:26.648606

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1b062faed4cc'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('fandoms',
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_fandoms_name'), 'fandoms', ['name'], unique=True)
    op.create_table('nsfw_fetishes_taboo',
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_nsfw_fetishes_taboo_name'), 'nsfw_fetishes_taboo', ['name'], unique=True)
    op.create_table('tags',
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tags_name'), 'tags', ['name'], unique=True)
    op.create_table('users',
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=True),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('role', sa.String(length=5), nullable=False),
    sa.Column('gender', sa.String(length=6), nullable=True),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_mailing', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('announcements',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('orientation', sa.String(length=8), nullable=True),
    sa.Column('gender', sa.String(length=7), nullable=True),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('is_crossgender', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_anonymously', sa.Boolean(), nullable=False),
    sa.Column('is_verify', sa.Boolean(), nullable=False),
    sa.Column('is_nsfw', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('annnouncements_fandoms',
    sa.Column('annnouncement_id', sa.UUID(), nullable=False),
    sa.Column('fandom_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['annnouncement_id'], ['announcements.id'], ),
    sa.ForeignKeyConstraint(['fandom_id'], ['fandoms.id'], ),
    sa.PrimaryKeyConstraint('annnouncement_id', 'fandom_id')
    )
    op.create_table('annnouncements_nsfw_fetishes',
    sa.Column('annnouncement_id', sa.UUID(), nullable=False),
    sa.Column('nsfw_fetish_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['annnouncement_id'], ['announcements.id'], ),
    sa.ForeignKeyConstraint(['nsfw_fetish_id'], ['nsfw_fetishes_taboo.id'], ),
    sa.PrimaryKeyConstraint('annnouncement_id', 'nsfw_fetish_id')
    )
    op.create_table('annnouncements_nsfw_taboo',
    sa.Column('annnouncement_id', sa.UUID(), nullable=False),
    sa.Column('nsfw_taboo_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['annnouncement_id'], ['announcements.id'], ),
    sa.ForeignKeyConstraint(['nsfw_taboo_id'], ['nsfw_fetishes_taboo.id'], ),
    sa.PrimaryKeyConstraint('annnouncement_id', 'nsfw_taboo_id')
    )
    op.create_table('annnouncements_tags',
    sa.Column('annnouncement_id', sa.UUID(), nullable=False),
    sa.Column('tag_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['annnouncement_id'], ['announcements.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.PrimaryKeyConstraint('annnouncement_id', 'tag_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('annnouncements_tags')
    op.drop_table('annnouncements_nsfw_taboo')
    op.drop_table('annnouncements_nsfw_fetishes')
    op.drop_table('annnouncements_fandoms')
    op.drop_table('announcements')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_tags_name'), table_name='tags')
    op.drop_table('tags')
    op.drop_index(op.f('ix_nsfw_fetishes_taboo_name'), table_name='nsfw_fetishes_taboo')
    op.drop_table('nsfw_fetishes_taboo')
    op.drop_index(op.f('ix_fandoms_name'), table_name='fandoms')
    op.drop_table('fandoms')
    # ### end Alembic commands ###
